package action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import service.impl.PostServiceImpl;
import service.impl.UsersServiceImpl;
import dao.impl.LoginDaoImpl;
import bean.Login;
import bean.Register;

/**
 * Servlet implementation class LoginAction
 */
@WebServlet("/LoginAction")
public class LoginAction extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public LoginAction() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String account=request.getParameter("account");
		String password=request.getParameter("password");
		List<Login> list=new ArrayList<Login>();
		list=new LoginDaoImpl().login(account);
		PrintWriter out =response.getWriter();
		String type=request.getParameter("type");	
		if(request.getParameter("method").equals("login"))
		{
			if(list.size()>0)
			{
				for(Login login:list)
				{
					if(login.getNickName().equals(account))
					{
						if(login.getPassword().equals(password))
						{
							if(login.getTypeid().getType().equals(type))
							{
							  //request.getRequestDispatcher("/index.jsp").forward(request, response);
						

								out.print(1);
								HttpSession session=request.getSession();
								Register register=new UsersServiceImpl().getRegisterBy(login);
								session.setAttribute("ClientMessageAfterLogin", register);
								session.setMaxInactiveInterval(1800);
								int loginId=new UsersServiceImpl().getUsers(register).getId();//loginid等于usersid
								session.setAttribute("loginId", loginId);
							}
							else
							{
								out.print("用户类型不正确！");
							}
						}
						else
						{
							out.print("密码不正确！");
						}
					}
				}
			}
			else
			{
				out.print("用户不存在！");

			}
			out.flush();
			out.close();
		}
		
	}

}
